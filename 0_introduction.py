
# Сортировки в Python

'''
Сортировки в Python — это методы упорядочивания элементов в коллекциях, таких как списки или кортежи. 
Сортировка позволяет организовать данные по определённым критериям (например, по возрастанию или убыванию)
для удобства поиска, работы с ними и анализа.

В Python сортировки можно разделить на встроенные (например, метод sort() и функция sorted()) и алгоритмические
(реализуемые вручную с помощью классических алгоритмов).
'''

# Основные встроенные методы сортировки в Python:

'''
1. sort() — метод для сортировки списка на месте. Он изменяет исходный список.
2. sorted() — функция, которая возвращает новый отсортированный список, не изменяя исходный.

Эти методы используют алгоритм Timsort — это гибридный алгоритм, который сочетает в себе идеи сортировки слиянием
и сортировки вставками. Timsort показывает хорошую производительность на реальных данных, особенно если данные уже
частично отсортированы.
'''

# Основные классические алгоритмы сортировки:

'''
1. Пузырьковая сортировка (Bubble Sort)
2. Сортировка выбором (Selection Sort)
3. Сортировка вставками (Insertion Sort)
4. Сортировка слиянием (Merge Sort)
5. Быстрая сортировка (Quick Sort)
6. Сортировка кучей (Heap Sort)
7. Шелловская сортировка (Shell Sort)
8. Гномья сортировка (Gnome Sort)
9. Поразрядная сортировка (Radix Sort)
10. Сортировка подсчётом (Counting Sort)
11. Сортировка ведрами (Bucket Sort)
12. Топологическая сортировка (Topological Sort) — применяется для графов.
'''




